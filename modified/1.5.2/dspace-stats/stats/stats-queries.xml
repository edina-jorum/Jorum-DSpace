<?xml version="1.0" encoding="UTF-8"?>
<querylist>
	<!-- ************************************************************* -->
	<!-- *********************** GLOBAL LEVEL ************************ -->
	<!-- ************************************************************* -->

	<!-- ********** ACCESS TYPE ********** -->
	
		<query name="access-downloads-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select 	year, 
						sum(relative_value) as numero 
				from 	stats.download_month
				group by year
				order by year;
			</sql>
		</query>
		<query name="access-downloads-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select 	to_date(d.yearmonth::varchar,'yyyymm'), 
						d.numero
				from 	(select 	yearmonth, sum(relative_value) as numero
				      	 from 		stats.download_month
					  	 where 	year=pyear
					  	 group by yearmonth
					  	) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="access-downloads-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select 	date, 
						sum(relative_value::real) as value
				from 	stats.v_download
				where 	date 
						  between to_date('01-pmonth-pyear','DD-MM-YYYY') 
						  and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
				group by date
				order by date;
			</sql>
		</query>
		<query name="access-downloads-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<sql>
				select 	date_trunc('hour',time)::time as hour, 
						sum(relative_value::real) as value
				from 	stats.v_download
				where 	date = to_date('end','DD-MM-YYYY') 
				group by date_trunc('hour',time)::time
				order by date_trunc('hour',time)::time;
			</sql>
		</query>
		<query name="access-downloads-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads from stats.download_country_month
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.download_month) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="access-downloads-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads from stats.download_country_month
						 where year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.download_month
						  where year=pyear) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="access-downloads-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads from stats.v_download
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="access-downloads-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads from stats.v_download
						 where date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="access-views-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.views
				from 	(select year, sum(value)::bigint as views
				         from stats.view_month
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="access-views-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(value) as numero
				      from stats.view_month
					  where year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="access-views-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.views
				from 	(select date, count(*) as views
				         from stats.v_view
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="access-views-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.views
				from 	(select date_trunc('hour',time)::time as hour, count(*) as views
				         from stats.v_view
						 where date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
		<query name="access-views-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views from stats.view_country_month
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total from stats.view_month) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="access-views-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views from stats.view_country_month
						 where year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total from stats.view_month
						  where year=pyear) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="access-views-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views from stats.v_view
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="access-views-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views from stats.v_view
						 where date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>	
		<query name="access-all-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select t.year, sum(t.downloads) as downloads, sum(t.views) as views 
				from 	(select year, (sum(relative_value)) as downloads, 0 as views
				         from stats.download_month
						 group by year
						 union all
						 select year, 0 as downloads, sum(value)::bigint as views
				         from stats.view_month
						 group by year) as t
				group by t.year 
				order by t.year;
			</sql>
		</query>
		<query name="access-all-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
			select to_date(t.yearmonth::varchar,'yyyymm'), sum(t.downloads) as downloads, sum(t.views) as views
				from (select yearmonth, sum(relative_value) as downloads, 0 as views
				      from stats.download_month
					  where year=pyear
					  group by yearmonth
					  union all
					  select yearmonth, 0 as downloads, sum(value) as views
				      from stats.view_month
					  where year=pyear
					  group by yearmonth) as t
				group by t.yearmonth
				order by t.yearmonth;
			</sql>
		</query>
		<query name="access-all-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.date as "Dia", sum(t.downloads) as downloads, sum(t.views) as views
				from 	(select date, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date
						 union all
						 select date, 0 as downloads, count(*) as views
				         from stats.v_view
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as t
				group by t.date
				order by t.date;
			</sql>
		</query>
		<query name="access-all-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.hora, sum(t.downloads) as downloads, sum(views) as views
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download
						 where date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time
						 union all
						 select date_trunc('hour',time)::time as hora, 0 as downloads, count(*) as views
				         from stats.v_view
						 where date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as t
				group by t.hora
				order by t.hora;
			</sql>
		</query>
		<query name="access-search-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.searches
				from 	(select year, sum(value)::bigint as searches
				         from stats.search_month
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="access-search-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.searches
				from (select yearmonth, sum(value) as searches
				      from stats.search_month
					  where year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="access-search-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.searches
				from 	(select date, count(*) as searches
				         from stats.v_search
						 where date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="access-search-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.searches
				from 	(select date_trunc('hour',time)::time as hour, count(*) as searches
				         from stats.v_search
						 where date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>

		<query name="access-downloads-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint
				from 	(select (sum(relative_value))  as downloads from stats.download_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d;
			</sql>
		</query>
		<query name="access-downloads-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads
				from 	(select (sum(relative_value))::bigint  as downloads from stats.v_download
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d;
			</sql>
		</query>				
		<query name="access-downloads-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real
				from 	(select count(*) as docs from stats.v_item_commit
						 where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads from stats.download_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="access-downloads-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real)
				from 	(select count(*) as docs from stats.v_item_commit
						 where data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads from stats.v_download
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>        		
		<query name="access-downloads-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads from stats.download_country_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value) as total from stats.download_month
						  where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="access-downloads-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,(sum(relative_value::real)) as downloads from stats.v_download
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="access-views-summary-totals-yearmonth">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views::bigint
				from 	(select sum(value)  as views from stats.view_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="access-views-summary-totals-date">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views
				from 	(select count(*) as views from stats.v_view
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				
		<query name="access-views-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs)::real
				from 	(select count(*) as docs from stats.v_item_commit
						 where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views from stats.view_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
           </sql>
        </query>
		<query name="access-views-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs::real)
				from 	(select count(*) as docs from stats.v_item_commit
						 where data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views from stats.v_view
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
           </sql>
        </query>        		
		<query name="access-views-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,sum(value) as views from stats.view_country_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as c,
						 stats.country sc,
						 (select sum(value) as total from stats.view_month
						  where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="access-views-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,count(*)::real as views from stats.v_view
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as c,
						 stats.country sc,
						 (select count(*)::real as total from stats.v_view
						  where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="access-all-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint, 
						c.views::bigint
				from 	(select (sum(relative_value))  as downloads from stats.download_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views from stats.view_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="access-all-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads, 
						c.views
				from 	(select (sum(relative_value))::bigint  as downloads from stats.v_download
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views from stats.v_view
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>		
		<query name="access-all-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real,
						(c.views/d.docs)::real
				from 	(select sum(value) as views from stats.view_month 
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c,
						(select count(*) as docs from stats.v_item_commit
						 where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads from stats.download_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="access-all-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real),
						(c.views/d.docs::real)
				from 	(select count(*) as views from stats.v_view 
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c,
						(select count(*) as docs from stats.v_item_commit
						 where data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads from stats.v_download
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>
		<query name="access-search-summary-totals-yearmonth">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches::bigint
				from 	(select sum(value)  as searches from stats.search_month
						 where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="access-search-summary-totals-date">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches
				from 	(select count(*) as searches from stats.v_search
						 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				

       <query name="words-toptotal-global">
       		<column label="Word" align="left" format=""/>
       		<column label="Number" align="right" format="###,###,##0" calc-total="yes" />
           	<sql>
              select word ,sum(value)::bigint from 
                 (select yearmonth,word as word,sum(value) as value from stats.search_words_month
                  where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                  group by yearmonth,word) as t
              group by word
              order by 2 desc
              limit 'topn';
           	</sql>
        </query>
        
       <query name="access-downloads-ranking-community-yearmonth">
       		<column label="Community" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select 	c.short_description || ' - ' || c.name, 
                		n.docs, 
                       	d.downloads, 
                       	d.downloads::real/n.docs 
				from
                   (select community_id, sum(relative_value)::real as downloads
                    from stats.download_comm_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by community_id) as d,
                   (select community_id,count(*) as docs
                    from stats.v_item_commit_comm
                    where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by community_id) as n,
                community c
                where d.community_id = n.community_id 
                and d.community_id = c.community_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-community-date">
       		<column label="Community" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select 	c.short_description || ' - ' || c.name, 
                		n.docs, 
                       	d.downloads, 
                       	d.downloads::real/n.docs 
                from
                   (select community_id,sum(relative_value::real) as downloads
                    from stats.v_download_comm
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by community_id) as d,
                   (select community_id,count(*) as docs
                    from stats.v_item_commit_comm
                    where data &lt;=  to_date('end','DD-MM-YYYY')
                    group by community_id) as n,
                community c
                where d.community_id = n.community_id 
                and d.community_id = c.community_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-collection-yearmonth">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select c.name, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select collection_id,sum(relative_value)::real as downloads
                    from stats.download_coll_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by collection_id) as d,
                   (select collection_id,count(*) as docs
                    from stats.v_item_commit_coll
                    where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>        
       <query name="access-downloads-ranking-collection-date">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select c.name, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select collection_id,sum(relative_value)::real as downloads
                    from stats.v_download_coll
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by collection_id) as d,
                   (select collection_id,count(*) as docs
                    from stats.v_item_commit_coll
                    where data &lt;=  to_date('end','DD-MM-YYYY')
                    group by collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
        <query name="access-downloads-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_doc, sum(relative_value) as downloads 
                    from stats.download_metadata_month
                    where field_id=66
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-downloads-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.type as tipo_doc, sum(relative_value::real) as downloads from stats.v_item_type t, stats.v_download v
                    where t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-downloads-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_acesso, sum(relative_value) as downloads 
                    from stats.download_metadata_month
                    where field_id = 53 
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-downloads-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.access as tipo_acesso, sum(relative_value::real) as downloads from stats.v_item_access t, stats.v_download v
                    where t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select field_value::integer as ano, sum(relative_value) as downloads
                    from stats.download_metadata_month
                    where field_id = 15 
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit v
                    where ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select substr(ia.date_issued,1,4) as ano, sum(v.relative_value::real) as downloads
                    from stats.v_download v, stats.v_itemsbydate ia
                    where v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by ano) as d,
                   (select substr(ia.date_issued,1,4) as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit v
                    where ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select field_value as autor, sum(relative_value) as downloads
                 from stats.download_metadata_month
                 where field_id = 3 
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit v
                  where ia.item_id = v.item_id
                  and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select ia.author as autor, sum(v.relative_value::real) as downloads
                 from stats.v_download v, stats.v_itemsbyauthor ia
                 where v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by autor) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit v
                  where ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="access-downloads-ranking-item-yearmonth">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value) as downloads
                    from stats.download_item_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
       <query name="access-downloads-ranking-item-date">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value::real) as downloads
                    from stats.v_download
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="access-downloads-ranking-ip-date">
       		<column label="IP" align="left" format=""/>
       		<column label="Origin" align="left" format=""/>
       		<column label="Downloads" align="right" format="###,###,##0.0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.downloads from
                    (select ip, country_code as pais, sum(relative_value) as downloads
                    from stats.v_download
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.downloads desc
                 limit 'topn'
           </sql>
        </query>
       <query name="access-views-ranking-community-yearmonth">
       		<column label="Community" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select c.short_description || ' - ' || c.name, n.docs, 
                       d.views, d.views::real/n.docs from
                   (select community_id,sum(value)::bigint as views
                    from stats.view_comm_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by community_id) as d,
                   (select community_id,count(*) as docs
                    from stats.v_item_commit_comm
                    where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by community_id) as n,
                community c
                where d.community_id = n.community_id
                and d.community_id = c.community_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>        
       <query name="access-views-ranking-community-date">
       		<column label="Community" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
            <sql>
                select c.short_description || ' - ' || c.name, n.docs, 
                       d.views, d.views::real/n.docs from
                   (select community_id,count(*) as views
                    from stats.v_view_comm
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by community_id) as d,
                   (select community_id,count(*) as docs
                    from stats.v_item_commit_comm
                    where data &lt;=  to_date('end','DD-MM-YYYY')
                    group by community_id) as n,
                community c
                where d.community_id = n.community_id
                and d.community_id = c.community_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-collection-yearmonth">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select c.name, n.docs, d.views, d.views::real/n.docs from
                   (select collection_id,sum(value)::bigint as views
                    from stats.view_coll_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by collection_id) as d,
                   (select collection_id,count(*) as docs
                    from stats.v_item_commit_coll
                    where to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-collection-date">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select c.name, n.docs, d.views, d.views::real/n.docs from
                   (select collection_id,count(*) as views
                    from stats.v_view_coll
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by collection_id) as d,
                   (select collection_id,count(*) as docs
                    from stats.v_item_commit_coll
                    where data &lt;=  to_date('end','DD-MM-YYYY')
                    group by collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
        <query name="access-views-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as tipo_doc, sum(value)::bigint as views 
                    from stats.view_metadata_month
                    where field_id = 66 
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-views-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select t.type as tipo_doc, count(*) as views from stats.v_item_type t, stats.v_view v
                    where t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-views-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.accesstype, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as accesstype, sum(value)::bigint as views 
                    from stats.view_metadata_month
                    where field_id = 53 
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as accesstype,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.accesstype = n.accesstype
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="access-views-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.access, n.docs, t.views, t.views::real/n.docs from
                   (select t.access, count(*) as views from stats.v_item_access t, stats.v_view v
                    where t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit v
                    where t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.access = n.access
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select field_value::integer as pubyear, sum(value)::bigint as views
                    from stats.view_metadata_month
                    where field_id = 15 
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit v
                    where ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as views
                    from stats.v_view v, stats.v_itemsbydate ia
                    where v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by pubyear) as d,
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit v
                    where ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select field_value as author, sum(value)::bigint as views
                 from stats.view_metadata_month
                 where field_id = 3 
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit v
                  where ia.item_id = v.item_id
                  and to_char(v.data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
       <query name="access-views-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select ia.author, count(*) as views
                 from stats.v_view v, stats.v_itemsbyauthor ia
                 where v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by author) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit v
                  where ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
        <query name="access-views-ranking-item-yearmonth">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, sum(value)::bigint as views
                    from stats.view_item_month
                    where yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="access-views-ranking-item-date">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, count(*) as views
                    from stats.v_view
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="access-views-ranking-ip-date">
       		<column label="IP" align="left" format="" />
       		<column label="Origin" align="left" format="" />
       		<column label="Views" align="right" format="###,###,##0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.views from
                    (select ip as ip, country_code as pais, count(*) as views
                    from stats.v_view
                    where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.views desc
                 limit 'topn'
           </sql>
        </query>

	<!-- ********** CONTENT TYPE ********** -->

        <query name="comcolitem-global">
        	<column label="N.º of Communities" align="right" format="###,###,##0" />
        	<column label="N.º of Collections" align="right" format="###,###,##0" />
        	<column label="N.º of Items" align="right" format="###,###,##0" />
           	<sql>select com.communities, col.collections, it.docs from
                   (SELECT count(*) as communities FROM community) as com,
                   (select count(*) as collections from collection) as col,
                   (select count(*) as docs from stats.v_item) as it;</sql>
        </query>
        <query name="comcolitem-medias-global">
        	<column label="Communities" align="right" format="###,###,##0.0" />
        	<column label="Collections" align="right" format="###,###,##0.0" />
           	<sql>select it.docs/com.communities::real, it.docs/col.collections::real from
                   (SELECT count(*) as communities FROM community) as com,
                   (select count(*) as collections from collection) as col,
                   (select count(*) as docs from stats.v_item) as it;</sql>
        </query>
        <query name="comcolitem-list-global">
        	<column label="Community" align="left" format="" />
        	<column label="Collections" align="right" format="###,###,##0" />
           <sql>
           		select c.name, t.numcoll
           		from (select community_id,short_description || ' - ' || name as name 
           				 from community) as c,
           			 (select community_id, count(*) as numcoll 
           			  from community2collection
           			  group by community_id) as t
           		where c.community_id = t.community_id
           		order by c.name;
           </sql>
        </query>
		<query name="content-docs-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select substr(data::character varying,1,4), count(*) 
				from   stats.v_item_commit
				group by substr(data::character varying,1,4)
				order by substr(data::character varying,1,4);
			</sql>
		</query>
		<query name="content-docs-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select to_date(d.mes::varchar,'yyyy-mm'), d.numero as "Documentos"
				from (select substr(data::character varying,1,7) as mes, count(*) as numero
				      from stats.v_item_commit
				      where substr(data::character varying,1,4)='pyear'
					  group by substr(data::character varying,1,7)) as d
				order by d.mes;
			</sql>
		</query>
		<query name="content-docs-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select d.data , d.number
				from 	(select data, count(*) as number
				         from stats.v_item_commit
						 where data 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by data) as d
				order by d.data;
			</sql>
		</query>
        <query name="content-docs-community-global">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
			<column label="Community" align="left" format="" />
           	<sql> select t.number, (t.number/docs.number::real)*100, c.short_description || ' - ' || c.name from
                    (select community_id,count(*) as number
                    from stats.v_item_comm
                    group by community_id) as t,
                    (select count(*) as number from stats.v_item) as docs, 
                    community c
                 where t.community_id = c.community_id
                 order by 1 desc;
           </sql>
        </query>
        <query name="content-docs-collection-global">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
			<column label="Collection" align="left" format="" />
           	<sql> select t.number, (t.number/docs.number::real)*100, c.name from
                    (select v.collection_id,count(*) as number
                    from stats.v_item_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    group by v.collection_id) as t,
                    (select count(*) as number from stats.v_item) as docs,
                    collection c
                 where t.collection_id = c.collection_id
                 order by 1 desc;
           </sql>
        </query>
        <query name="content-docs-yctt-global">
			<column label="Year" align="left" format="" />
			<column label="Community" align="left" format="" />
			<column label="Collection" align="left" format="" />
			<column label="Type" align="left" format="" />
			<column label="Number" align="right" format="###,###,##0" />
           	<sql> 
			   select v.year, c.short_description as community, co.short_description as collection, v.type, v.number
			   from stats.v_ycct v, community c, collection co
			   where v.community_id = c.community_id
			   and v.collection_id = co.collection_id
			   order by v.year, c.short_description
           </sql>
        </query>		
        <query name="content-docs-type-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.type, d.number, (d.number/docs.number::real)*100
           		from 
                    (select type,count(*) as number 
                    from stats.v_item_type
                    group by type) as d,
                    (select count(*) as number from stats.v_item) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="content-docs-access-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.access, d.number, (d.number/docs.number::real)*100
           		from
                    (select access,count(*) as number
                    from stats.v_item_access
                    group by access) as d,
                    (select count(*) as number from stats.v_item) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="content-docs-pubyear-global">
			<column label="Year" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.year, d.number, (d.number/docs.number::real)*100
           		from
                    (select substr(date_issued,1,4) as year,count(*) as number
                    from stats.v_itemsbydate
                    group by 1) as d,
                    (select count(*) as number from stats.v_item) as docs
                order by 1 desc;
           </sql>
        </query>
        <query name="content-docs-author-global">
			<column label="Author" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
           	<sql>
                    select author,count(*)
                    from stats.v_itemsbyauthor
                    group by author
                    order by 2 desc
                    limit 'topn';
           </sql> 
        </query>
        <query name="files-count-global">
			<column label="Files" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
			<column label="Average (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.files, f.size, f.size::real/f.files from 
                   (select count(*) as files, sum(size)/1024/1024 as size from stats.v_files) as f;
           </sql>
        </query>
        <query name="files-format-global">
			<column label="Format" align="left" format="" />
			<column label="Number" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.formato, f.numero, f.tamanho from
                   (select short_description as formato, count(*) as numero, sum(size)/1024/1024::real as tamanho
                   from stats.v_files
                   group by short_description) as f
                order by f.tamanho desc;
           </sql>
        </query>
	
	<!-- ********** ADM TYPE ********** -->

        <query name="users-global">
        	<column label="Total" align="right" format="###,###,##0" />
        	<column label="Internal" align="right" format="###,###,##0" />
        	<column label="External" align="right" format="###,###,##0" />
           	<sql> select u.total, u1.internal, u2.external from 
                  (SELECT count(*) as total FROM eperson) as u,
                  (SELECT count(*) as internal FROM eperson where email like '%uminho.pt%') as u1,
                  (SELECT count(*) as external FROM eperson where email not like '%uminho.pt%') as u2;
           </sql>
        </query>
        <query name="users-subscription-global">
        	<column label="Total" align="right" format="###,###,##0" />
        	<column label="Internal" align="right" format="###,###,##0" />
        	<column label="External" align="right" format="###,###,##0" />
           	<sql> select a.total, b.internal, c.external from
                  (SELECT count(*) as total FROM
                      (select distinct eperson_id from subscription) as t) as a,
                  (SELECT count(*) as internal FROM
                      (select distinct s.eperson_id from subscription s, eperson e where e.eperson_id = s.eperson_id and e.email like '%uminho.pt%') as t) as b,
                  (SELECT count(*) as external FROM
                      (select distinct s.eperson_id from subscription s, eperson e where e.eperson_id = s.eperson_id and e.email not like '%uminho.pt%') as t) as c;
           </sql>
        </query>
        <query name="workflow-resumo-estado-global">
        	<column label="Status" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select state_desc, count(*)
              from stats.v_workflow
              group by state_desc
              order by state_desc;
           </sql>
        </query>
        <query name="workflow-resumo-comunidade-global">
        	<column label="Community" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql> 
              select community_name, count(*)
              from stats.v_workflow
              group by community_name
              order by community_name;
           </sql>
        </query>
        <query name="workflow-docs-global">
        	<column label="Status" align="left" format="" />
        	<column label="User" align="left" format="" />
        	<column label="Community" align="left" format="" />
        	<column label="Title" align="left" format="" />
           <sql> 
              select state_desc, owner, community_short, title 
              from stats.v_workflow 
              order by state, collection_id;
           </sql>
        </query>
        <query name="workflow-docs-global-operator">
        	<column label="User" align="left" format="" />
        	<column label="Community" align="left" format="" />
        	<column label="Title" align="left" format="" />
           <sql> 
              select owner, community_short, title 
              from stats.v_workflow
			  where state=6
              order by owner, collection_id;
           </sql>
        </query>		
		<query name="adm-workflow-tasks-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
              select substr(date::character varying,1,4), count(*) 
              from stats.workflow where old_state= 'operacao'
              group by 1
              order by 1;
			</sql>
		</query>
		<query name="adm-workflow-tasks-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select to_date(d.month::varchar,'yyyy-mm'), d.number
				from 	(select substr(date::character varying,1,7) as month, count(*) as number
				         from stats.workflow
				         where old_state= 'operacao'
				         and substr(date::character varying,1,4)='pyear'
						 group by substr(date::character varying,1,7)) as d
				order by d.month;
			</sql>
		</query>
		<query name="adm-workflow-tasks-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select d.date, d.number
				from 	(select date, count(*) as number
				         from stats.workflow
						 where old_state= 'operacao'
						 and date 
						 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="adm-workflow-tasks-series-hour">
			<column label="Hour" align="left" format="HH:mm" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select hour, d.number
				from 	(select date_trunc('hour',time)::time as hour, count(*) as number
				         from stats.workflow
						 where old_state= 'operacao'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
        <query name="adm-workflow-tasks-operator-year">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number from stats.workflow where old_state= 'operacao'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="adm-workflow-tasks-operator-month">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number from stats.workflow where old_state= 'operacao'
                  and substr(date::character varying,1,4)='pyear'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="adm-workflow-tasks-operator-day">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number from stats.workflow where old_state= 'operacao'
					 and date 
					 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
						 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="adm-workflow-tasks-operator-hour">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number from stats.workflow where old_state= 'operacao'
					 and date = to_date('end','DD-MM-YYYY') 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>

        <query name="adm-workflow-operacao-global">
        	<column label="Operation" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
        	<column label="N.º of Operators" align="right" format="###,###,##0" calc-total="yes"/>
           <sql>
                select s.name,w.numero, u.operadores from
                  (select old_state, count(*) as numero from stats.workflow 
                  where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                  group by old_state) as w,
                  (select old_state,count(*) as operadores from 
                      (select old_state,user_id,count(*) from stats.workflow 
                      where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                      group by old_state,user_id) as t
                   group by old_state
                  ) as u,
                stats.workflow_steps s
                where w.old_state = s.code and s.taken=true
                and w.old_state = u.old_state
                order by w.old_state;
           </sql>
        </query>
		<query name="adm-logins-series-year">
        	<column label="Year" align="left" format="" />
        	<column label="Logins" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
              select substr(date::character varying,1,4), count(*) 
              from stats.login
              group by 1
              order by 1;
			</sql>
		</query>
		<query name="adm-logins-series-month">
        	<column label="Month" align="left" format="MMMM" />
        	<column label="Logins" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select to_date(d.month::varchar,'yyyy-mm'), d.number
				from 	(select substr(date::character varying,1,7) as month, count(*) as number
				         from stats.login
				         where substr(date::character varying,1,4)='pyear'
						 group by substr(date::character varying,1,7)) as d
				order by d.month;
			</sql>
		</query>
		<query name="adm-logins-series-day">
        	<column label="Day" align="left" format="dd, E" />
        	<column label="Logins" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select d.date, d.number
				from 	(select date, count(*) as number
				         from stats.login
						 where date 
						 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="adm-logins-series-hour">
			<column label="Hour" align="left" format="HH:mm" />
			<column label="Logins" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select hour, d.number
				from 	(select date_trunc('hour',time)::time as hour, count(*) as number
				         from stats.login
						 where date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>

        <query name="logins-top-global">
			<column label="Name" align="left" format="" />
			<column label="Email" align="left" format="" />
			<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           <sql>
               select e.firstname || ' ' || e.lastname, e.email, l.number from
                 (select user_id,count(*) as number
                 from stats.login
                 where date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 group by user_id
                 order by number desc
                 limit 'topn') as l,
               eperson e
               where l.user_id = e.email
           </sql>
        </query>
		<query name="adm-requests-series-year">
        	<column label="Year" align="left" format="" />
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
              select substr(request_date::character varying,1,4), count(*) 
              from requestitem
              group by 1
              order by 1;
			</sql>
		</query>
		<query name="adm-requests-series-month">
        	<column label="Month" align="left" format="MMMM" />
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select to_date(d.month::varchar,'yyyy-mm'), d.number
				from 	(select substr(request_date::character varying,1,7) as month, count(*) as number
				         from requestitem
				         where substr(request_date::character varying,1,4)='pyear'
						 group by substr(request_date::character varying,1,7)) as d
				order by d.month;
			</sql>
		</query>
		<query name="adm-requests-series-day">
        	<column label="Day" align="left" format="dd, E" />
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select d.request_date, d.number
				from 	(select request_date::date, count(*) as number
				         from requestitem
						 where request_date::date 
						 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by request_date::date) as d
				order by d.request_date;
			</sql>
		</query>

        <query name="pedidos-global">
        	<column label="Total" align="right" format="###,###,##0"/>
        	<column label="Accepted" align="right" format="###,###,##0"/>
        	<column label="Rejected" align="right" format="###,###,##0"/>
           <sql>
                 select t.total, a.accepted, r.rejected from
                 (select count(*) as total from requestitem
                  where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t,
                 (select count(*) as accepted from requestitem where accept_request='t'
                  and request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as a,
                 (select count(*) as rejected from requestitem where accept_request='f'
                  and request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as r;
           </sql>
        </query>

        <query name="pedidos-medias">
        	<column label="Total" align="right" format="###,###,##0.00"/>
        	<column label="Accepted" align="right" format="###,###,##0.00"/>
        	<column label="Rejected" align="right" format="###,###,##0.00"/>
           	<sql>
                 select t.total, 
                        a.accepted, 
                        r.rejected from
                 (select avg(to_char(decision_date - request_date,'dd')::real) as total from requestitem
                  where accept_request in ('t','f') 
                  and request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t,
                 (select avg(to_char(decision_date - request_date,'dd')::real) as accepted from requestitem where accept_request='t'
                  and request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as a,
                 (select avg(to_char(decision_date - request_date,'dd')::real) as rejected from requestitem where accept_request='f'
                  and request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as r;
           </sql>
        </query>
        <query name="pedidos-top">
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes" />
        	<column label="Handle" align="left" format="" />
        	<column label="Title" align="left" format="" />
           	<sql>
              select i.pedidos, h.handle, dc.text_value  from
                 (select item_id,count(*) as pedidos
                    from requestitem
                    where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by pedidos desc
                    limit 'topn') as i,
                  dcvalue dc, handle h
                  where i.item_id = dc.item_id
                  and dc.dc_type_id=64
                  and i.item_id = h.resource_id and h.resource_type_id=2;
           </sql>
        </query>
        <query name="pedidos-dep">
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes" />
        	<column label="Submitter" align="left" format="" />
           	<sql>
              select p.pedidos, e.firstname || ' ' || e.lastname  from
                 (select i.submitter_id,count(*) as pedidos
                    from requestitem r, item i
                    where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and r.item_id = i.item_id
                    group by i.submitter_id
                    order by pedidos desc
                    limit 'topn') as p,
                    eperson e
                    where e.eperson_id = p.submitter_id;
           </sql>
        </query>
        <query name="pedidos-dep-ace">
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes" />
        	<column label="Submitter" align="left" format="" />
           <sql>
              select p.pedidos, e.firstname || ' ' || e.lastname  from
                 (select i.submitter_id,count(*) as pedidos
                    from requestitem r, item i
                    where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and accept_request = 't'
                    and r.item_id = i.item_id
                    group by i.submitter_id
                    order by pedidos desc
                    limit 'topn') as p,
                    eperson e
                    where e.eperson_id = p.submitter_id;
           </sql>
        </query>
        <query name="pedidos-dep-rej">
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes" />
        	<column label="Submitter" align="left" format="" />
           	<sql>
              select p.pedidos, e.firstname || ' ' || e.lastname from
                 (select i.submitter_id,count(*) as pedidos
                    from requestitem r, item i
                    where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and accept_request = 'f'
                    and r.item_id = i.item_id
                    group by i.submitter_id
                    order by pedidos desc
                    limit 'topn') as p,
                    eperson e
                    where e.eperson_id = p.submitter_id;
           </sql>
        </query>
        <query name="pedidos-dep-sem">
        	<column label="Requests" align="right" format="###,###,##0" calc-total="yes" />
        	<column label="Submitter" align="left" format="" />
           	<sql>
              select p.pedidos, e.firstname || ' ' || e.lastname from
                 (select i.submitter_id,count(*) as pedidos
                    from requestitem r, item i
                    where request_date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and accept_request is null
                    and r.item_id = i.item_id
                    group by i.submitter_id
                    order by pedidos desc
                    limit 'topn') as p,
                    eperson e
                    where e.eperson_id = p.submitter_id;
           </sql>
        </query>
        <query name="access-errors-global" title="Inconsistencias Tipo de Acesso">
        	<column label="Id" align="left" format="########" />
        	<column label="Handle" align="left" format="" />
        	<column label="Metadada" align="left" format="" />
        	<column label="Permissions" align="left" format="" />
           	<sql>
              select v.item_id,h.handle,v.access,stats.item_access(v.item_id)
              from stats.v_item_access v, handle h
              where v.item_id = h.resource_id
              and h.resource_type_id = 2
              and substr(v.access,1,15) != substr(stats.item_access(v.item_id),1,15)
              order by item_id;
           </sql>
        </query>
        <query name="agents-list" title="">
            <column label="IP Number" align="right" format="###,###,##0" calc-total="yes" />
            <column label="agent" align="left" format=""/>
           <sql>
              select ipnum, name
              from
                 (select (select count(*) from stats.ip_spider where agent_id = stats.agent.agent_id) as ipnum,
                     name
                 from stats.agent) as a
              where ipnum > 0
              order by ipnum desc
           </sql>
        </query>
        <query name="agents-list-byname" title="">
            <column label="IP number" align="right" format="###,###,##0" calc-total="yes" />
            <column label="Agent" align="left" format=""/>
           <sql>
              select ipnum, name
              from
                 (select (select count(*) from stats.ip_spider where agent_id = stats.agent.agent_id) as ipnum,
                     name
                 from stats.agent) as a
              where ipnum > 0
              order by name
           </sql>
        </query>
        <query name="spiders-origin">
            <column label="Country" align="left" format=""/>
            <column label="IP number" align="right" format="###,###,##0" calc-total="yes" />
            <column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
            <sql>
                 select  'flag:' || lower(sc.code) || ':' || sc.name,
                          d.number, (d.number/t.total)*100
                 from    (select country_code,count(*)::real as number
                          from stats.ip_spider
                          group by country_code) as d,
                         stats.country sc,
                        (select count(*) as total
                        from stats.ip_spider) as t
                 where d.country_code = sc.code
                 order by d.number desc
           </sql>
      </query>
      <query name="spiders-byagent">
         <column label="Agent" align="left" format=""/>
         <column label="IP" align="left" format=""/>
         <column label="Country" align="left" format=""/>
        <sql>
              select a.name, s.ip, c.name
              from   stats.ip_spider s,
                     stats.agent a,
                     stats.country c
              where  s.agent_id = a.agent_id
              and    c.code=s.country_code
              and   a.name like 'pagent%'
              order by a.name, s.ip
         </sql>
      </query>
      <query name="spiders-bycountry">
         <column label="Agent" align="left" format=""/>
         <column label="IP" align="left" format=""/>
         <column label="Country" align="left" format=""/>
        <sql>
              select a.name, s.ip, c.name
              from   stats.ip_spider s,
                     stats.agent a,
                     stats.country c
              where  s.agent_id = a.agent_id
              and    c.code=s.country_code
              and    ('pcountry' = '99' or s.country_code = 'pcountry')
              order by a.name, s.ip
         </sql>
      </query>
        <query name="spiders-control" title="">
            <column label="Data Fecho" align="left" format="dd-MM-yyyy"/>
            <column label="Data Weblog" align="left" format=""/>
           <sql>
              select closed, last_line_log
              from stats.control
           </sql>
        </query>
        <query name="weblog-1" title="">
            <column label="Agent" align="left" />
            <column label="IP" align="left" format=""/>
           <sql>
              select name, ip
              from stats.agent_staging
              where type = 1
              order by name
           </sql>
        </query>
        <query name="weblog-2" title="">
            <column label="Agent" align="left" />
            <column label="IP" align="left" format=""/>
           <sql>
              select name, ip
              from stats.agent_staging
              where type = 2
              order by name
           </sql>
        </query>
        <query name="weblog-3" title="">
            <column label="Agent" align="left" />
            <column label="IP" align="left" format=""/>
           <sql>
              select name, ip
              from stats.agent_staging
              where type = 3
              order by name
           </sql>
        </query>
        <query name="weblog-4" title="">
            <column label="Agent" align="left" />
            <column label="IP" align="left" format=""/>
           <sql>
              select name, ip
              from stats.agent_staging
              where type = 4
              order by name
           </sql>
        </query>
        <query name="analise-sessoes-1" title="">
           <column label="IP" align="left" format="" />
           <column label="Country" align="left" format="" />
           <column label="Date" align="left" format="dd-MM-yyyy" />
           <column label="Hour" align="left" format="HH:mm" />
           <column label="First" align="left" format="HH:mm:ss" />
           <column label="Last" align="left" format="HH:mm:ss" />
           <column label="Time" align="left" format="mm:ss.S" />
           <column label="Hits" align="right" format="" />
           <column label="D.Hits" align="right" format="" />
           <column label="Cadency" align="left" format="mm:ss.S" />
           <column label="sessions" align="right" format="" />
           <sql>
              select v.ip, c.name, v.date, v.hour, v.first, v.last, v.time, v.hits, v.dhits, v.hitcadency, v.sessions 
              from stats.v_session_analysis v, stats.country c, stats.ip_keepwatched k
              where v.country_code = c.code
              and v.ip = k.ip
              and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
           </sql>
        </query>
        <query name="analise-sessoes-2" title="">
           <column label="IP" align="left" format="" />
           <column label="Country" align="left" format="" />
           <column label="Date" align="left" format="dd-MM-yyyy" />
           <column label="Hour" align="left" format="HH:mm" />
           <column label="First" align="left" format="HH:mm:ss" />
           <column label="Last" align="left" format="HH:mm:ss" />
           <column label="Time" align="left" format="mm:ss.S" />
           <column label="Hits" align="right" format="" />
           <column label="D.Hits" align="right" format="" />
           <column label="Cadency" align="left" format="mm:ss.S" />
           <column label="Sessions" align="right" format="" />
           <sql>
              select v.ip, c.name, v.date, v.hour, v.first, v.last, v.time, v.hits, v.dhits, v.hitcadency, v.sessions
              from stats.v_session_analysis v, stats.country c
              where v.country_code = c.code
              and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
              and ip not in (select ip from stats.ip_keepwatched)
           </sql>
        </query>
        <query name="ip-detail" title="">
           <column label="Hour" align="left" format="HH:mm:ss" />
           <column label="Access" align="left" format="" />
           <column label="Handle" align="left" format="" /> 
           <column label="User" align="left" format="" />
           <column label="Session ID" align="left" format="" />
          <sql>
            select time, type, handle, user_id, session_id from
              (select v.time, 'consulta' as type, h.handle as handle, user_id, session_id
              from stats.view v, handle h
              where v.item_id = h.resource_id and h.resource_type_id = 2
              and v.date = to_date('start','DD-MM-YYYY')
              and v.ip = 'pip'
              union all
              select d.time, 'download' as type, h.handle as handle, user_id, session_id
              from stats.download d, bundle2bitstream bb, item2bundle ib, handle h
              where d.bitstream_id = bb.bitstream_id 
              and bb.bundle_id = ib.bundle_id
              and ib.item_id = h.resource_id and h.resource_type_id = 2
              and d.date = to_date('start','DD-MM-YYYY')
              and d.ip = 'pip') as a
           order by time
           </sql>
        </query>
        <query name="ip-detail-total" title="">
           <column label="Date" align="left" format="dd-MM-yyyy" />
           <column label="Hour" align="left" format="HH:mm:ss" />
           <column label="Access" align="left" format="" />
           <column label="Handle" align="left" format="" />
           <column label="User" align="left" format="" />
           <column label="Session ID" align="left" format="" />
          <sql>
            select date, time, type, handle, user_id, session_id from
              (select v.date, v.time, 'consulta' as type, h.handle as handle, user_id, session_id
              from stats.view v, handle h
              where v.item_id = h.resource_id and h.resource_type_id = 2
              and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
              and v.ip = 'pip'
              union all
              select d.date, d.time, 'download' as type, h.handle as handle, user_id, session_id
              from stats.download d, bundle2bitstream bb, item2bundle ib, handle h
              where d.bitstream_id = bb.bitstream_id
              and d.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
              and bb.bundle_id = ib.bundle_id
              and ib.item_id = h.resource_id and h.resource_type_id = 2
              and d.ip = 'pip') as a
           order by date, time
           </sql>
        </query>
        <query name="keepwatched-sessions">
           <column label="IP" align="left" format="" />
           <column label="Country" align="left" format="" />
           <column label="Total Hits" align="right" format="" />
           <column label="Total D.Hits" align="right" format="" />
           <column label="sessions" align="right" format="##0" />
           <column label="Avg S in H" align="right" format="##0.00" />
           <column label="Last agent" align="left" format="" />
           <sql>
             select f.ip, f.name, f.hits, f.dhits, f.sessions, f.msh, k.last_agent
             from
                (select s.ip, s.name, 
                       sum(s.hits) as hits, sum(s.dhits) as dhits, sum(s.sessions) as sessions, 
                       sum(s.sessionsinhits * s.hits::real)/sum(s.hits) as msh
                from
                      (select v.ip, c.name, v.date, v.hour, v.first, v.last, v.time, v.hits, v.dhits, v.hitcadency, v.sessions, v.sessionsinhits
                      from stats.v_session_keepwatched_analysis v, stats.country c
                      where v.country_code = c.code
                      and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as s
                group by s.ip, s.name
                ) as f,
                stats.ip_keepwatched k
            where f.ip = k.ip
            order by f.hits desc
            limit topn
           </sql>

        </query>

	<!-- ************************************************************* -->
	<!-- ******************** COMMUNITY LEVEL ************************ -->
	<!-- ************************************************************* -->		

	<!-- ********** ACCESS TYPE ********** -->
		<query name="com-access-downloads-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select d.year, d.numero
				from 	(select year, sum(relative_value) as numero 
				         from stats.download_comm_month
				         where community_id=object-id
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="com-access-downloads-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(relative_value) as numero
				      from stats.download_comm_month
				      where community_id=object-id
					  and year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="com-access-downloads-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select d.date, d.numero
				from 	(select date, (sum(relative_value::real)) as numero
				         from stats.v_download_comm
				         where community_id=object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="com-access-downloads-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<sql>
				select hora, d.numero
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as numero
				         from stats.v_download_comm
				         where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hora;
			</sql>
		</query>
		<query name="com-access-downloads-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_comm_month
						 where community_id = object-id
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.download_comm_month
						  where community_id = object-id) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="com-access-downloads-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_comm_month
						 where community_id = object-id
						 and year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.download_comm_month
						  where community_id = object-id
						  and year=pyear) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="com-access-downloads-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_comm
						  where community_id = object-id
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="com-access-downloads-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_comm
						  where community_id = object-id
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="com-access-views-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.views
				from 	(select year, sum(value)::bigint as views
				         from stats.view_comm_month
				         where community_id = object-id
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="com-access-views-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(value) as numero
				      from stats.view_comm_month
				      where community_id = object-id
					  and year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="com-access-views-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.views
				from 	(select date, count(*) as views
				         from stats.v_view_comm
				         where community_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="com-access-views-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.views
				from 	(select date_trunc('hour',time)::time as hour, count(*) as views
				         from stats.v_view_comm
				         where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
		<query name="com-access-views-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_comm_month
						 where community_id = object-id
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_comm_month
						  where community_id = object-id) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="com-access-views-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_comm_month
						 where community_id = object-id
						 and year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_comm_month
						  where community_id = object-id
						  and year=pyear) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="com-access-views-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view_comm
						  where community_id = object-id
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="com-access-views-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view_comm
						  where community_id = object-id
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>	
		<query name="com-access-all-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select t.year, sum(t.downloads) as downloads, sum(t.views) as views 
				from 	(select year, (sum(relative_value)) as downloads, 0 as views
				         from stats.download_comm_month
				         where community_id = object-id
						 group by year
						 union all
						 select year, 0 as downloads, sum(value)::bigint as views
				         from stats.view_comm_month
				         where community_id = object-id
						 group by year) as t
				group by t.year 
				order by t.year;
			</sql>
		</query>
		<query name="com-access-all-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
			select to_date(t.yearmonth::varchar,'yyyymm'), sum(t.downloads) as downloads, sum(t.views) as views
				from (select yearmonth, sum(relative_value) as downloads, 0 as views
				      from stats.download_comm_month
				      where community_id = object-id
					  and year=pyear
					  group by yearmonth
					  union all
					  select yearmonth, 0 as downloads, sum(value) as views
				      from stats.view_comm_month
				      where community_id = object-id
					  and year=pyear
					  group by yearmonth) as t
				group by t.yearmonth
				order by t.yearmonth;
			</sql>
		</query>
		<query name="com-access-all-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.date as "Dia", sum(t.downloads) as downloads, sum(t.views) as views
				from 	(select date, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download_comm
				         where community_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date
						 union all
						 select date, 0 as downloads, count(*) as views
				         from stats.v_view_comm
				         where community_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as t
				group by t.date
				order by t.date;
			</sql>
		</query>
		<query name="com-access-all-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.hora, sum(t.downloads) as downloads, sum(views) as views
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download_comm
				         where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time
						 union all
						 select date_trunc('hour',time)::time as hora, 0 as downloads, count(*) as views
				         from stats.v_view_comm
				         where community_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as t
				group by t.hora
				order by t.hora;
			</sql>
		</query>
		<query name="com-access-search-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.searches
				from 	(select substr(date::character varying,1,4) as year, count(*)::bigint as searches
				         from stats.v_search
				         where scope='community' and scope_id='object-id'
						 group by 1
						 order by 1) as d;
			</sql>
		</query>
		<query name="com-access-search-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth,'yyyy-mm'), d.searches
				from (select substr(date::varchar,1,7) as yearmonth, count(*) as searches
				      from stats.v_search
				      where scope='community' and scope_id='object-id'
					  and substr(date::varchar,1,4)='pyear'
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="com-access-search-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.searches
				from 	(select date, count(*) as searches
				         from stats.v_search
				         where scope='community' and scope_id='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="com-access-search-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.searches
				from 	(select date_trunc('hour',time)::time as hour, count(*) as searches
				         from stats.v_search
				         where scope='community' and scope_id='object-id'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
		<query name="com-access-downloads-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint
				from 	(select (sum(relative_value))  as downloads 
						 from stats.download_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d;
			</sql>
		</query>
		<query name="com-access-downloads-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads
				from 	(select (sum(relative_value))::bigint  as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d;
			</sql>
		</query>				
		<query name="com-access-downloads-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real
				from 	(select count(*) as docs 
						 from stats.v_item_commit_comm
						 where community_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads 
						 from stats.download_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="com-access-downloads-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real)
				from 	(select count(*) as docs 
						 from stats.v_item_commit_comm
						 where community_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>        		
		<query name="com-access-downloads-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value) as total 
						  from stats.download_comm_month
						  where community_id = object-id
						  and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="com-access-downloads-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,(sum(relative_value::real)) as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_comm
						  where community_id = object-id
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="com-access-views-summary-totals-yearmonth">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views::bigint
				from 	(select sum(value)  as views 
						 from stats.view_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="com-access-views-summary-totals-date">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views
				from 	(select count(*) as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				
		<query name="com-access-views-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs)::real
				from 	(select count(*) as docs 
						 from stats.v_item_commit_comm
						 where community_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views 
						 from stats.view_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
           </sql>
        </query>
		<query name="com-access-views-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs::real)
				from 	(select count(*) as docs 
						 from stats.v_item_commit_comm
						 where community_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
           </sql>
        </query>        		
		<query name="com-access-views-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as c,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_comm_month
						  where community_id = object-id
						  and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="com-access-views-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,count(*)::real as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as c,
						 stats.country sc,
						 (select count(*)::real as total 
						  from stats.v_view_comm
						  where community_id = object-id
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="com-access-all-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint, 
						c.views::bigint
				from 	(select (sum(relative_value))  as downloads 
						 from stats.download_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views 
						 from stats.view_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="com-access-all-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads, 
						c.views
				from 	(select (sum(relative_value))::bigint  as downloads 
						 from stats.v_download_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views 
						 from stats.v_view_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>		
		<query name="com-access-all-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real,
						(c.views/d.docs)::real
				from 	(select sum(value) as views from stats.view_comm_month
						 where community_id = object-id 
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c,
						(select count(*) as docs from stats.v_item_commit_comm
						 where community_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads from stats.download_comm_month
						 where community_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="com-access-all-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real),
						(c.views/d.docs::real)
				from 	(select count(*) as views from stats.v_view_comm
						 where community_id = object-id 
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c,
						(select count(*) as docs from stats.v_item_commit_comm
						 where community_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads from stats.v_download_comm
						 where community_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>
		<query name="com-access-search-summary-totals-yearmonth">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches::bigint
				from 	(select count(*) as searches from stats.v_search
						 where scope='community' and scope_id = 'object-id'
						 and date 
						     between to_date('01-mesinicio-anoinicio','DD-MM-YYYY')
						     and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1) as c;
			</sql>
		</query>
		<query name="com-access-search-summary-totals-date">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches
				from 	(select count(*) as searches from stats.v_search
						 where scope='community' and scope_id = 'object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				
       <query name="com-access-downloads-ranking-collection-yearmonth">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select c.name, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select s.collection_id,sum(s.relative_value)::real as downloads
                    from stats.download_coll_month s, community2collection cc
                    where s.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and s.yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by s.collection_id) as d,
                   (select v.collection_id,count(*) as docs
                    from stats.v_item_commit_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and to_char(v.data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by v.collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>        
       <query name="com-access-downloads-ranking-collection-date">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select c.name, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select v.collection_id,sum(v.relative_value)::real as downloads
                    from stats.v_download_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by v.collection_id) as d,
                   (select v.collection_id,count(*) as docs
                    from stats.v_item_commit_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by v.collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
        <query name="com-access-downloads-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_doc, sum(relative_value)::real as downloads 
                    from stats.download_metadata_comm_month
                    where field_id = 66 
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-downloads-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.type as tipo_doc, sum(relative_value)::real as downloads 
                    from stats.v_item_type t, stats.v_download_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-downloads-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_acesso, sum(relative_value)::real as downloads 
                    from stats.download_metadata_comm_month
                    where field_id = 53 
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-downloads-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.access as tipo_acesso, sum(relative_value)::real as downloads 
                    from stats.v_item_access t, stats.v_download_comm v
                    where v.community_id = object-id 
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
       <query name="com-access-downloads-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select field_value::integer as ano, sum(relative_value)::real as downloads
                    from stats.download_metadata_comm_month
                    where field_id = 15 
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="com-access-downloads-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select substr(ia.date_issued,1,4) as ano, sum(v.relative_value)::real as downloads
                    from stats.v_download_comm v, stats.v_itemsbydate ia
                    where v.community_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by ano) as d,
                   (select substr(ia.date_issued,1,4) as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_comm v
                    where v.community_id = object-id 
                    and ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="com-access-downloads-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select field_value as autor, sum(relative_value)::real as downloads
                 from stats.download_metadata_comm_month
                 where field_id = 3 
                 and community_id = object-id
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_comm v
                  where v.community_id = object-id
                  and ia.item_id = v.item_id
                  and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="com-access-downloads-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select ia.author as autor, sum(v.relative_value)::real as downloads
                 from stats.v_download_comm v, stats.v_itemsbyauthor ia
                 where v.community_id = object-id
                 and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by autor) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_comm v
                  where v.community_id = object-id
                  and ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="com-access-downloads-ranking-item-yearmonth">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value)::real as downloads
                    from stats.download_item_comm_month
                    where community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
       <query name="com-access-downloads-ranking-item-date">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value)::real as downloads
                    from stats.v_download_comm
                    where community_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="com-access-downloads-ranking-ip-date">
       		<column label="IP" align="left" format=""/>
       		<column label="Origin" align="left" format=""/>
       		<column label="Downloads" align="right" format="###,###,##0.0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.downloads from
                    (select ip as ip, country_code as pais, sum(relative_value)::real as downloads
                    from stats.v_download_comm
                    where community_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.downloads desc
                 limit 'topn'
           </sql>
        </query>
       <query name="com-access-views-ranking-collection-yearmonth">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select c.name, n.docs, d.views, d.views::real/n.docs from
                   (select s.collection_id,sum(s.value)::bigint as views
                    from stats.view_coll_month s, community2collection cc
                    where s.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and s.yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by s.collection_id) as d,
                   (select v.collection_id,count(*) as docs
                    from stats.v_item_commit_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and to_char(v.data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by v.collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="com-access-views-ranking-collection-date">
       		<column label="Collection" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select c.name, n.docs, d.views, d.views::real/n.docs from
                   (select v.collection_id,count(*) as views
                    from stats.v_view_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by v.collection_id) as d,
                   (select v.collection_id,count(*) as docs
                    from stats.v_item_commit_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by v.collection_id) as n,
                collection c
                where d.collection_id = n.collection_id
                and d.collection_id = c.collection_id
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
        <query name="com-access-views-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as tipo_doc, sum(value)::bigint as views 
                    from stats.view_metadata_comm_month
                    where field_id = 66
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-views-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select t.type as tipo_doc, count(*) as views 
                    from stats.v_item_type t, stats.v_view_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-views-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.accesstype, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as accesstype, sum(value)::bigint as views 
                    from stats.view_metadata_comm_month
                    where field_id = 53 
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as accesstype,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.accesstype = n.accesstype
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="com-access-views-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.access, n.docs, t.views, t.views::real/n.docs from
                   (select t.access, count(*) as views 
                    from stats.v_item_access t, stats.v_view_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.access = n.access
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
       <query name="com-access-views-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select field_value::integer as pubyear, sum(value)::bigint as views
                    from stats.view_metadata_comm_month
                    where field_id = 15 
                    and community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="com-access-views-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as views
                    from stats.v_view_comm v, stats.v_itemsbydate ia
                    where v.community_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by pubyear) as d,
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_comm v
                    where v.community_id = object-id
                    and ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="com-access-views-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select field_value as author, sum(value)::bigint as views
                 from stats.view_metadata_comm_month
                 where field_id = 3 
                 and community_id = object-id
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_comm v
                  where v.community_id = object-id
                  and ia.item_id = v.item_id
                  and to_char(v.data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
       <query name="com-access-views-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select ia.author, count(*) as views
                 from stats.v_view_comm v, stats.v_itemsbyauthor ia
                 where v.community_id = object-id
                 and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by author) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_comm v
                  where v.community_id = object-id
                  and ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
        <query name="com-access-views-ranking-item-yearmonth">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, sum(value)::bigint as views
                    from stats.view_item_comm_month
                    where community_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="com-access-views-ranking-item-date">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, count(*) as views
                    from stats.v_view_comm
                    where community_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="com-access-views-ranking-ip-date">
       		<column label="IP" align="left" format="" />
       		<column label="Origin" align="left" format="" />
       		<column label="Views" align="right" format="###,###,##0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.views from
                    (select ip as ip, country_code as pais, count(*) as views
                    from stats.v_view_comm
                    where community_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.views desc
                 limit 'topn'
           </sql>
        </query>
        
	
	<!-- ********** CONTENT TYPE ********** -->

        <query name="colitem-global">
        	<column label="N.º of Collections" align="right" format="###,###,##0" />
        	<column label="N.º of Items" align="right" format="###,###,##0" />
        	<column label="Items Average per Collection" align="right" format="###,###,##0.0" />
           	<sql>select col.collections, it.docs, it.docs/col.collections::real from
                   (select count(*) as collections 
                    from community2collection
                    where community_id = object-id) as col,
                   (select count(*) as docs 
                   	from stats.v_item_comm
                   	where community_id = object-id) as it;</sql>
        </query>
        <query name="colitem-list-global">
        	<column label="Collection" align="left" format="" />
        	<column label="Items" align="right" format="###,###,##0" />
           <sql>
           		select c.name, t.numitems
           		from (select c.collection_id, c.name 
           			  from collection c, community2collection cc
           			  where c.collection_id = cc.collection_id
           			  and cc.community_id = object-id) as c,
           			 (select cc.collection_id, count(*) as numitems 
           			  from community2collection cc, collection2item ci
           			  where cc.community_id = 'object-id'
           			  and cc.collection_id = ci.collection_id
           			  group by cc.collection_id) as t
           		where c.collection_id = t.collection_id
           		order by c.name;
           </sql>
        </query>
		<query name="com-content-docs-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select substr(data::character varying,1,4), count(*) 
				from   stats.v_item_commit_comm
				where community_id = object-id
				group by substr(data::character varying,1,4)
				order by substr(data::character varying,1,4);
			</sql>
		</query>
		<query name="com-content-docs-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select to_date(d.mes::varchar,'yyyy-mm'), d.numero as "Documentos"
				from (select substr(data::character varying,1,7) as mes, count(*) as numero
				      from stats.v_item_commit_comm
				      where community_id = object-id
				      and substr(data::character varying,1,4)='pyear'
					  group by substr(data::character varying,1,7)) as d
				order by d.mes;
			</sql>
		</query>
		<query name="com-content-docs-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select d.data , d.number
				from 	(select data, count(*) as number
				         from stats.v_item_commit_comm
				         where community_id = object-id
						 and data 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by data) as d
				order by d.data;
			</sql>
		</query>
        <query name="com-content-docs-collection-global">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
			<column label="Collection" align="left" format="" />
           	<sql> select t.number, (t.number/docs.number::real)*100, c.name from
                    (select v.collection_id,count(*) as number
                    from stats.v_item_coll v, community2collection cc
                    where v.collection_id = cc.collection_id
                    and cc.community_id = object-id
                    group by v.collection_id) as t,
                    (select count(*) as number from stats.v_item_comm
                     where community_id = object-id) as docs,
                    collection c
                 where t.collection_id = c.collection_id
                 order by 1 desc;
           </sql>
        </query>
        <query name="com-content-docs-type-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.type, d.number, (d.number/docs.number::real)*100
           		from 
                    (select type,count(*) as number 
                    from stats.v_item_type_comm
                    where community_id = object-id
                    group by type) as d,
                    (select count(*) as number from stats.v_item_comm
                     where community_id = object-id) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="com-content-docs-access-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.access, d.number, (d.number/docs.number::real)*100
           		from
                    (select access,count(*) as number
                    from stats.v_item_access_comm
                    where community_id = object-id
                    group by access) as d,
                    (select count(*) as number from stats.v_item_comm
                     where community_id = object-id) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="com-content-docs-pubyear-global">
			<column label="Year" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.year, d.number, (d.number/docs.number::real)*100
           		from
                    (select substr(i.date_issued,1,4) as year,count(*) as number
                    from stats.v_itemsbydate i, communities2item ci
                    where i.item_id = ci.item_id
                    and ci.community_id = object-id
                    group by 1) as d,
                    (select count(*) as number from stats.v_item_comm
                     where community_id = object-id) as docs
                order by 1 desc;
           </sql>
        </query>
        <query name="com-content-docs-author-global">
			<column label="Author" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
           	<sql>
                    select i.author,count(*)
                    from stats.v_itemsbyauthor i, communities2item ci
                    where i.item_id = ci.item_id
                    and ci.community_id = object-id
                    group by i.author
                    order by 2 desc
                    limit 'topn';
           </sql> 
        </query>
        <query name="com-files-count-global">
			<column label="Files" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
			<column label="Average (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.files, f.size, f.size::real/f.files from 
                   (select count(*) as files, sum(size)/1024/1024 as size 
                    from stats.v_files_comm
                    where community_id = object-id) as f;
           </sql>
        </query>
        <query name="com-files-format-global">
			<column label="Format" align="left" format="" />
			<column label="Number" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.formato, f.numero, f.tamanho from
                   (select short_description as formato, count(*) as numero, sum(size)/1024/1024::real as tamanho
                   from stats.v_files_comm
                   where community_id = object-id
                   group by short_description) as f
                order by f.tamanho desc;
           </sql>
        </query>
	
	<!-- ********** ADM TYPE ********** -->

        <query name="com-workflow-resumo-estado-global">
        	<column label="Status" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select state_desc, count(*)
              from stats.v_workflow
              where community_id = object-id
              group by state_desc
              order by state_desc;
           </sql>
        </query>
        <query name="com-workflow-resumo-collection-global">
        	<column label="Collection" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql> 
              select collection_name, count(*)
              from stats.v_workflow
              where community_id = object-id
              group by collection_name
              order by collection_name;
           </sql>
        </query>
        <query name="com-workflow-docs-global">
        	<column label="Status" align="left" format="" />
        	<column label="User" align="left" format="" />
        	<column label="Collection" align="left" format="" />
        	<column label="Title" align="left" format="" />
           <sql> 
              select state_desc, owner, collection_name, title 
              from stats.v_workflow 
              where community_id = object-id
              order by state, collection_id;
           </sql>
        </query>
		<query name="com-adm-workflow-tasks-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
              select substr(date::character varying,1,4), count(*) 
              from stats.v_workflow_comm
              where community_id = object-id 
              and old_state= 'operacao'
              group by 1
              order by 1;
			</sql>
		</query>
		<query name="com-adm-workflow-tasks-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select to_date(d.month::varchar,'yyyy-mm'), d.number
				from 	(select substr(date::character varying,1,7) as month, count(*) as number
				         from stats.v_workflow_comm
				         where community_id = object-id
				         and old_state= 'operacao'
				         and substr(date::character varying,1,4)='pyear'
						 group by substr(date::character varying,1,7)) as d
				order by d.month;
			</sql>
		</query>
		<query name="com-adm-workflow-tasks-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select d.date, d.number
				from 	(select date, count(*) as number
				         from stats.v_workflow_comm
				         where community_id = object-id
						 and old_state= 'operacao'
						 and date 
						 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="com-adm-workflow-tasks-series-hour">
			<column label="Hour" align="left" format="HH:mm" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select hour, d.number
				from 	(select date_trunc('hour',time)::time as hour, count(*) as number
				         from stats.v_workflow_comm
				         where community_id = object-id
						 and old_state= 'operacao'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
        <query name="com-adm-workflow-tasks-operator-year">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where community_id = object-id 
                  and old_state= 'operacao'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="com-adm-workflow-tasks-operator-month">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where community_id = object-id
                  and old_state= 'operacao'
                  and substr(date::character varying,1,4)='pyear'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="com-adm-workflow-tasks-operator-day">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where community_id = object-id 
                  and old_state= 'operacao'
					 and date 
					 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
						 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="com-adm-workflow-tasks-operator-hour">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm 
                  where community_id = object-id
                  and old_state= 'operacao'
					 and date = to_date('end','DD-MM-YYYY') 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>

        <query name="com-adm-workflow-operacao-global">
        	<column label="Operation" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
        	<column label="N.º of Operators" align="right" format="###,###,##0" calc-total="yes"/>
           <sql>
                select s.name,w.numero, u.operadores from
                  (select old_state, count(*) as numero from stats.v_workflow_comm
                   where community_id = object-id 
                  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                  group by old_state) as w,
                  (select old_state,count(*) as operadores from 
                      (select old_state,user_id,count(*) from stats.v_workflow_comm
                      where community_id = object-id 
                      and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                      group by old_state,user_id) as t
                   group by old_state
                  ) as u,
                stats.workflow_steps s
                where w.old_state = s.code
                and w.old_state = u.old_state
                order by w.old_state;
           </sql>
        </query>

	<!-- ************************************************************* -->
	<!-- ******************** COLLECTION LEVEL *********************** -->
	<!-- ************************************************************* -->		

	<!-- ********** ACCESS TYPE ********** -->
		<query name="col-access-downloads-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select d.year, d.numero
				from 	(select year, sum(relative_value) as numero 
				         from stats.download_coll_month
				         where collection_id=object-id
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="col-access-downloads-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(relative_value) as numero
				      from stats.download_coll_month
				      where collection_id=object-id
					  and year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="col-access-downloads-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select d.date, d.numero
				from 	(select date, (sum(relative_value::real)) as numero
				         from stats.v_download_coll
				         where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="col-access-downloads-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<sql>
				select hora, d.numero
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as numero
				         from stats.v_download_coll
				         where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hora;
			</sql>
		</query>
		<query name="col-access-downloads-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_coll_month
						 where collection_id = object-id
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.download_coll_month
						  where collection_id = object-id) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="col-access-downloads-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_coll_month
						 where collection_id = object-id
						 and year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.download_coll_month
						  where collection_id = object-id
						  and year=pyear) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="col-access-downloads-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_coll
						  where collection_id = object-id
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="col-access-downloads-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_coll
						  where collection_id = object-id
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="col-access-views-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.views
				from 	(select year, sum(value)::bigint as views
				         from stats.view_coll_month
				         where collection_id = object-id
						 group by year
						 order by year) as d;
			</sql>
		</query>
		<query name="col-access-views-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(value) as numero
				      from stats.view_coll_month
				      where collection_id = object-id
					  and year=pyear
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="col-access-views-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.views
				from 	(select date, count(*) as views
				         from stats.v_view_coll
				         where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="col-access-views-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.views
				from 	(select date_trunc('hour',time)::time as hour, count(*) as views
				         from stats.v_view_coll
				         where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
		<query name="col-access-views-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_coll_month
						 where collection_id = object-id
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_coll_month
						  where collection_id = object-id) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="col-access-views-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views::bigint, (d.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_coll_month
						 where collection_id = object-id
						 and year=pyear
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_coll_month
						  where collection_id = object-id
						  and year=pyear) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="col-access-views-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view_coll
						  where collection_id = object-id
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="col-access-views-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total::real)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view_coll
						  where collection_id = object-id
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>	
		<query name="col-access-all-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select t.year, sum(t.downloads) as downloads, sum(t.views) as views 
				from 	(select year, (sum(relative_value)) as downloads, 0 as views
				         from stats.download_coll_month
				         where collection_id = object-id
						 group by year
						 union all
						 select year, 0 as downloads, sum(value)::bigint as views
				         from stats.view_coll_month
				         where collection_id = object-id
						 group by year) as t
				group by t.year 
				order by t.year;
			</sql>
		</query>
		<query name="col-access-all-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
			select to_date(t.yearmonth::varchar,'yyyymm'), sum(t.downloads) as downloads, sum(t.views) as views
				from (select yearmonth, sum(relative_value) as downloads, 0 as views
				      from stats.download_coll_month
				      where collection_id = object-id
					  and year=pyear
					  group by yearmonth
					  union all
					  select yearmonth, 0 as downloads, sum(value) as views
				      from stats.view_coll_month
				      where collection_id = object-id
					  and year=pyear
					  group by yearmonth) as t
				group by t.yearmonth
				order by t.yearmonth;
			</sql>
		</query>
		<query name="col-access-all-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.date as "Dia", sum(t.downloads) as downloads, sum(t.views) as views
				from 	(select date, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download_coll
				         where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date
						 union all
						 select date, 0 as downloads, count(*) as views
				         from stats.v_view_coll
				         where collection_id = object-id
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as t
				group by t.date
				order by t.date;
			</sql>
		</query>
		<query name="col-access-all-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.hora, sum(t.downloads) as downloads, sum(views) as views
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download_coll
				         where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time
						 union all
						 select date_trunc('hour',time)::time as hora, 0 as downloads, count(*) as views
				         from stats.v_view_coll
				         where collection_id = object-id
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as t
				group by t.hora
				order by t.hora;
			</sql>
		</query>
		<query name="col-access-search-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.year, d.searches
				from 	(select substr(date::character varying,1,4) as year, count(*)::bigint as searches
				         from stats.v_search
				         where scope='collection' and scope_id='object-id'
						 group by 1
						 order by 1) as d;
			</sql>
		</query>
		<query name="col-access-search-series-month">
			<column label="Month" align="left" format="MMMM"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth,'yyyy-mm'), d.searches
				from (select substr(date::varchar,1,7) as yearmonth, count(*) as searches
				      from stats.v_search
				      where scope='collection' and scope_id='object-id'
					  and substr(date::varchar,1,4)='pyear'
					  group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="col-access-search-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.searches
				from 	(select date, count(*) as searches
				         from stats.v_search
				         where scope='collection' and scope_id='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="col-access-search-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Searches" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select hour, d.searches
				from 	(select date_trunc('hour',time)::time as hour, count(*) as searches
				         from stats.v_search
				         where scope='collection' and scope_id='object-id'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
		<query name="col-access-downloads-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint
				from 	(select (sum(relative_value))  as downloads 
						 from stats.download_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d;
			</sql>
		</query>
		<query name="col-access-downloads-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads
				from 	(select (sum(relative_value))::bigint  as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d;
			</sql>
		</query>				
		<query name="col-access-downloads-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real
				from 	(select count(*) as docs 
						 from stats.v_item_commit_coll
						 where collection_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads 
						 from stats.download_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="col-access-downloads-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real)
				from 	(select count(*) as docs 
						 from stats.v_item_commit_coll
						 where collection_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>        		
		<query name="col-access-downloads-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value) as downloads 
						 from stats.download_country_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value) as total 
						  from stats.download_coll_month
						  where collection_id = object-id
						  and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="col-access-downloads-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,(sum(relative_value::real)) as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download_coll
						  where collection_id = object-id
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="col-access-views-summary-totals-yearmonth">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views::bigint
				from 	(select sum(value)  as views 
						 from stats.view_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="col-access-views-summary-totals-date">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	c.views
				from 	(select count(*) as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				
		<query name="col-access-views-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs)::real
				from 	(select count(*) as docs 
						 from stats.v_item_commit_coll
						 where collection_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views 
						 from stats.view_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
           </sql>
        </query>
		<query name="col-access-views-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(c.views/d.docs::real)
				from 	(select count(*) as docs 
						 from stats.v_item_commit_coll
						 where collection_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
           </sql>
        </query>        		
		<query name="col-access-views-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,sum(value) as views 
						 from stats.view_country_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                     	 group by country_code) as c,
						 stats.country sc,
						 (select sum(value) as total 
						  from stats.view_coll_month
						  where collection_id = object-id
						  and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="col-access-views-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						c.views::bigint, (c.views/t.total)*100 
				from	(select country_code,count(*)::real as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as c,
						 stats.country sc,
						 (select count(*)::real as total 
						  from stats.v_view_coll
						  where collection_id = object-id
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where c.country_code = sc.code
                 order by c.views desc;
			</sql>
		</query>
		<query name="col-access-all-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint, 
						c.views::bigint
				from 	(select (sum(relative_value))  as downloads 
						 from stats.download_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views 
						 from stats.view_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="col-access-all-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads, 
						c.views
				from 	(select (sum(relative_value))::bigint  as downloads 
						 from stats.v_download_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views 
						 from stats.v_view_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>		
		<query name="col-access-all-summary-averages-yearmonth">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs)::real,
						(c.views/d.docs)::real
				from 	(select sum(value) as views from stats.view_coll_month
						 where collection_id = object-id 
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c,
						(select count(*) as docs from stats.v_item_commit_coll
						 where collection_id = object-id
						 and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer) as d,
						(select sum(relative_value) as downloads from stats.download_coll_month
						 where collection_id = object-id
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as down;
           </sql>
        </query>
		<query name="col-access-all-summary-averages-date">
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Downloads Average" align="right" format="##0.0" />
			<column label="Views Average" align="right" format="##0.0" />
			<sql> 
              	select 	d.docs,  
						(down.downloads/d.docs::real),
						(c.views/d.docs::real)
				from 	(select count(*) as views from stats.v_view_coll
						 where collection_id = object-id 
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c,
						(select count(*) as docs from stats.v_item_commit_coll
						 where collection_id = object-id
						 and data &lt;=  to_date('end','DD-MM-YYYY')) as d,
						(select sum(relative_value) as downloads from stats.v_download_coll
						 where collection_id = object-id
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as down;
           </sql>
        </query>
		<query name="col-access-search-summary-totals-yearmonth">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches::bigint
				from 	(select count(*) as searches from stats.v_search
						 where scope='collection' and scope_id = 'object-id'
						 and date 
						     between to_date('01-mesinicio-anoinicio','DD-MM-YYYY')
						     and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1) as c;
			</sql>
		</query>
		<query name="col-access-search-summary-totals-date">
			<column label="Searches" align="right" format="###,###,##0"/>
			<sql>	
				select 	c.searches
				from 	(select count(*) as searches from stats.v_search
						 where scope='collection' and scope_id = 'object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>				
        <query name="col-access-downloads-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_doc, sum(relative_value)::real as downloads 
                    from stats.download_metadata_coll_month
                    where field_id = 66 
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-downloads-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql> 
                select t.tipo_doc, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.type as tipo_doc, sum(relative_value)::real as downloads 
                    from stats.v_item_type t, stats.v_download_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-downloads-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select field_value as tipo_acesso, sum(relative_value)::real as downloads 
                    from stats.download_metadata_coll_month
                    where field_id = 53 
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-downloads-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select t.tipo_acesso, n.docs, t.downloads, t.downloads::real/n.docs from
                   (select t.access as tipo_acesso, sum(relative_value)::real as downloads 
                    from stats.v_item_access t, stats.v_download_coll v
                    where v.collection_id = object-id 
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access as tipo_acesso,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.tipo_acesso = n.tipo_acesso
                 order by t.downloads desc
                 limit 'topn';
           </sql>
        </query>
       <query name="col-access-downloads-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select field_value::integer as ano, sum(relative_value)::real as downloads
                    from stats.download_metadata_coll_month
                    where field_id = 15 
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="col-access-downloads-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
                select d.ano, n.docs, d.downloads, d.downloads::real/n.docs from
                   (select substr(ia.date_issued,1,4) as ano, sum(v.relative_value)::real as downloads
                    from stats.v_download_coll v, stats.v_itemsbydate ia
                    where v.collection_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by ano) as d,
                   (select substr(ia.date_issued,1,4) as ano, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_coll v
                    where v.collection_id = object-id 
                    and ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.ano = n.ano
                order by d.downloads desc
                limit 'topn';
           </sql>
        </query>
       <query name="col-access-downloads-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select field_value as autor, sum(relative_value)::real as downloads
                 from stats.download_metadata_coll_month
                 where field_id = 3
                 and collection_id = object-id
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_coll v
                  where v.collection_id = object-id
                  and ia.item_id = v.item_id
                  and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="col-access-downloads-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Average" align="right" format="##0.0" />
           <sql>
              select d.autor,n.docs,d.downloads,d.downloads::real/n.docs from
                 (select ia.author as autor, sum(v.relative_value)::real as downloads
                 from stats.v_download_coll v, stats.v_itemsbyauthor ia
                 where v.collection_id = object-id
                 and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by autor) as d,
                 (select ia.author as autor,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_coll v
                  where v.collection_id = object-id
                  and ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.autor = n.autor
              order by d.downloads desc
              limit 'topn';
           </sql>
        </query>
       <query name="col-access-downloads-ranking-item-yearmonth">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value)::real as downloads
                    from stats.download_item_coll_month
                    where collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
       <query name="col-access-downloads-ranking-item-date">
       		<column label="Downloads" align="right" format="###,###,##0.0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format=""/>
           <sql>
              select temp.downloads,h.handle, dc.text_value from
                    (select item_id, sum(relative_value)::real as downloads
                    from stats.v_download_coll
                    where collection_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by downloads desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="col-access-downloads-ranking-ip-date">
       		<column label="IP" align="left" format=""/>
       		<column label="Origin" align="left" format=""/>
       		<column label="Downloads" align="right" format="###,###,##0.0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.downloads from
                    (select ip as ip, country_code as pais, sum(relative_value)::real as downloads
                    from stats.v_download_coll
                    where collection_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.downloads desc
                 limit 'topn'
           </sql>
        </query>
        <query name="col-access-views-ranking-doctype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as tipo_doc, sum(value)::bigint as views 
                    from stats.view_metadata_coll_month
                    where field_id = 66
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-views-ranking-doctype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.tipo_doc, n.docs, t.views, t.views::real/n.docs from
                   (select t.type as tipo_doc, count(*) as views 
                    from stats.v_item_type t, stats.v_view_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.type) as t,
                   (select t.type as tipo_doc,count(*) as docs
                    from stats.v_item_type t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.type) as n
                 where t.tipo_doc = n.tipo_doc
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-views-ranking-accesstype-yearmonth">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.accesstype, n.docs, t.views, t.views::real/n.docs from
                   (select field_value as accesstype, sum(value)::bigint as views 
                    from stats.view_metadata_coll_month
                    where field_id = 53 
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as t,
                   (select t.access as accesstype,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by t.access) as n
                 where t.accesstype = n.accesstype
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
        <query name="col-access-views-ranking-accesstype-date">
       		<column label="Type" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select t.access, n.docs, t.views, t.views::real/n.docs from
                   (select t.access, count(*) as views 
                    from stats.v_item_access t, stats.v_view_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by t.access) as t,
                   (select t.access,count(*) as docs
                    from stats.v_item_access t, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and t.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by t.access) as n
                 where t.access = n.access
                 order by t.views desc
                 limit 'topn';
           </sql>
        </query>
       <query name="col-access-views-ranking-pubyear-yearmonth">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select field_value::integer as pubyear, sum(value)::bigint as views
                    from stats.view_metadata_coll_month
                    where field_id = 15 
                    and collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by field_value) as d,
                   (select substr(ia.date_issued,1,4)::integer as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and ia.item_id = v.item_id
                    and to_char(data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                    group by substr(ia.date_issued,1,4)::integer) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="col-access-views-ranking-pubyear-date">
       		<column label="Year" align="left" format="####"/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
                select d.pubyear, n.docs, d.views, d.views::real/n.docs from
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as views
                    from stats.v_view_coll v, stats.v_itemsbydate ia
                    where v.collection_id = object-id
                    and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    and v.item_id = ia.item_id
                    group by pubyear) as d,
                   (select substr(ia.date_issued,1,4) as pubyear, count(*) as docs
                    from stats.v_itemsbydate ia, stats.v_item_commit_coll v
                    where v.collection_id = object-id
                    and ia.item_id = v.item_id
                    and v.data &lt;=  to_date('end','DD-MM-YYYY')
                    group by substr(ia.date_issued,1,4)) as n
                where d.pubyear = n.pubyear
                order by d.views desc
                limit 'topn';
           </sql>
        </query>
       <query name="col-access-views-ranking-author-yearmonth">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select field_value as author, sum(value)::bigint as views
                 from stats.view_metadata_coll_month
                 where field_id = 3
                 and collection_id = object-id
                 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                 group by field_value) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_coll v
                  where v.collection_id = object-id
                  and ia.item_id = v.item_id
                  and to_char(v.data,'YYYYMM')::integer &lt;=  ('anofim' || 'mesfim')::integer
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
       <query name="col-access-views-ranking-author-date">
       		<column label="Author" align="left" format=""/>
       		<column label="Items" align="right" format="###,###,##0" />
       		<column label="Views" align="right" format="###,###,##0" />
       		<column label="Average" align="right" format="##0.0" />
           	<sql>
              select d.author,n.docs,d.views,d.views::real/n.docs from
                 (select ia.author, count(*) as views
                 from stats.v_view_coll v, stats.v_itemsbyauthor ia
                 where v.collection_id = object-id
                 and v.date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                 and v.item_id = ia.item_id
                 group by author) as d,
                 (select ia.author,count(*) as docs
                  from stats.v_itemsbyauthor ia, stats.v_item_commit_coll v
                  where v.collection_id = object-id
                  and ia.item_id = v.item_id
                  and v.data &lt;=  to_date('end','DD-MM-YYYY')
                  group by author) as n
              where d.author = n.author
              order by d.views desc
              limit 'topn';
           </sql>
        </query>
        <query name="col-access-views-ranking-item-yearmonth">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, sum(value)::bigint as views
                    from stats.view_item_coll_month
                    where collection_id = object-id
                    and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="col-access-views-ranking-item-date">
        	<column label="Views" align="right" format="###,###,##0" />
       		<column label="Handle" align="left" format=""/>
       		<column label="Title" align="left" format="" />
           	<sql>
              select temp.views,h.handle, dc.text_value from
                    (select item_id, count(*) as views
                    from stats.v_view_coll
                    where collection_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by item_id
                    order by views desc
                    limit 'topn') as temp,
                 handle h, dcvalue dc
              where h.resource_id = temp.item_id
              and h.resource_type_id = 2
              and dc.item_id = temp.item_id
              and dc.dc_type_id = 64;
           </sql>
        </query>
        <query name="col-access-views-ranking-ip-date">
       		<column label="IP" align="left" format="" />
       		<column label="Origin" align="left" format="" />
       		<column label="Views" align="right" format="###,###,##0" />
           	<sql>
                select t.ip, 'flag:' || lower(t.pais) || ':' || sc.name, t.views from
                    (select ip as ip, country_code as pais, count(*) as views
                    from stats.v_view_coll
                    where collection_id = object-id
                    and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                    group by ip, country_code) as t,
                 stats.country sc
                 where t.pais = sc.code
                 order by t.views desc
                 limit 'topn'
           </sql>
        </query>
        
	
	<!-- ********** CONTENT TYPE ********** -->

		<query name="col-content-docs-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select substr(data::character varying,1,4), count(*) 
				from   stats.v_item_commit_coll
				where collection_id = object-id
				group by substr(data::character varying,1,4)
				order by substr(data::character varying,1,4);
			</sql>
		</query>
		<query name="col-content-docs-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select to_date(d.mes::varchar,'yyyy-mm'), d.numero as "Documentos"
				from (select substr(data::character varying,1,7) as mes, count(*) as numero
				      from stats.v_item_commit_coll
				      where collection_id = object-id
				      and substr(data::character varying,1,4)='pyear'
					  group by substr(data::character varying,1,7)) as d
				order by d.mes;
			</sql>
		</query>
		<query name="col-content-docs-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Items" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select d.data , d.number
				from 	(select data, count(*) as number
				         from stats.v_item_commit_coll
				         where collection_id = object-id
						 and data 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by data) as d
				order by d.data;
			</sql>
		</query>
        <query name="col-content-docs-type-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.type, d.number, (d.number/docs.number::real)*100
           		from 
                    (select type,count(*) as number 
                    from stats.v_item_type_coll
                    where collection_id = object-id
                    group by type) as d,
                    (select count(*) as number from stats.v_item_coll
                     where collection_id = object-id) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="col-content-docs-access-global">
			<column label="Type" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.access, d.number, (d.number/docs.number::real)*100
           		from
                    (select access,count(*) as number
                    from stats.v_item_access_coll
                    where collection_id = object-id
                    group by access) as d,
                    (select count(*) as number from stats.v_item_coll
                     where collection_id = object-id) as docs
                order by 2 desc;
           </sql>
        </query>
        <query name="col-content-docs-pubyear-global">
			<column label="Year" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
			<column label="Perc.(%)" align="right" format="##0.00" />
           	<sql>
           		select d.year, d.number, (d.number/docs.number::real)*100
           		from
                    (select substr(i.date_issued,1,4) as year,count(*) as number
                    from stats.v_itemsbydate i, collection2item ci
                    where i.item_id = ci.item_id
                    and ci.collection_id = object-id
                    group by 1) as d,
                    (select count(*) as number from stats.v_item_coll
                     where collection_id = object-id) as docs
                order by 1 desc;
           </sql>
        </query>
        <query name="col-content-docs-author-global">
			<column label="Author" align="left" format="" />
			<column label="Items" align="right" format="###,###,##0" />
           	<sql>
                    select i.author,count(*)
                    from stats.v_itemsbyauthor i, collection2item ci
                    where i.item_id = ci.item_id
                    and ci.collection_id = object-id
                    group by i.author
                    order by 2 desc
                    limit 'topn';
           </sql> 
        </query>
        <query name="col-files-count-global">
			<column label="Files" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
			<column label="Average (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.files, f.size, f.size::real/f.files from 
                   (select count(*) as files, sum(size)/1024/1024 as size 
                    from stats.v_files_coll
                    where collection_id = object-id) as f;
           </sql>
        </query>
        <query name="col-files-format-global">
			<column label="Format" align="left" format="" />
			<column label="Number" align="right" format="###,###,##0" />
			<column label="Size (Mb)" align="right" format="###,###,##0.00" />
           	<sql>
                select f.formato, f.numero, f.tamanho from
                   (select short_description as formato, count(*) as numero, sum(size)/1024/1024::real as tamanho
                   from stats.v_files_coll
                   where collection_id = object-id
                   group by short_description) as f
                order by f.tamanho desc;
           </sql>
        </query>
	
	<!-- ********** ADM TYPE ********** -->

        <query name="col-workflow-resumo-estado-global">
        	<column label="Status" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select state_desc, count(*)
              from stats.v_workflow
              where collection_id = object-id
              group by state_desc
              order by state_desc;
           </sql>
        </query>
        <query name="col-workflow-docs-global">
        	<column label="Status" align="left" format="" />
        	<column label="User" align="left" format="" />
        	<column label="Title" align="left" format="" />
           <sql> 
              select state_desc, owner, title 
              from stats.v_workflow 
              where collection_id = object-id
              order by state, collection_id;
           </sql>
        </query>
		<query name="col-adm-workflow-tasks-series-year">
			<column label="Year" align="left" format="####" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
              select substr(date::character varying,1,4), count(*) 
              from stats.v_workflow_comm
              where collection_id = object-id 
              and old_state= 'operacao'
              group by 1
              order by 1;
			</sql>
		</query>
		<query name="col-adm-workflow-tasks-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select to_date(d.month::varchar,'yyyy-mm'), d.number
				from 	(select substr(date::character varying,1,7) as month, count(*) as number
				         from stats.v_workflow_comm
				         where collection_id = object-id
				         and old_state= 'operacao'
				         and substr(date::character varying,1,4)='pyear'
						 group by substr(date::character varying,1,7)) as d
				order by d.month;
			</sql>
		</query>
		<query name="col-adm-workflow-tasks-series-day">
			<column label="Day" align="left" format="dd, E" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select d.date, d.number
				from 	(select date, count(*) as number
				         from stats.v_workflow_comm
				         where collection_id = object-id
						 and old_state= 'operacao'
						 and date 
						 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="col-adm-workflow-tasks-series-hour">
			<column label="Hour" align="left" format="HH:mm" />
			<column label="Operations" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select hour, d.number
				from 	(select date_trunc('hour',time)::time as hour, count(*) as number
				         from stats.v_workflow_comm
				         where collection_id = object-id
						 and old_state= 'operacao'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hour;
			</sql>
		</query>
        <query name="col-adm-workflow-tasks-operator-year">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where collection_id = object-id 
                  and old_state= 'operacao'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="col-adm-workflow-tasks-operator-month">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where collection_id = object-id
                  and old_state= 'operacao'
                  and substr(date::character varying,1,4)='pyear'
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="col-adm-workflow-tasks-operator-day">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm
                  where collection_id = object-id 
                  and old_state= 'operacao'
					 and date 
					 	 between to_date('01-pmonth-pyear','DD-MM-YYYY') 
						 and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>
        <query name="col-adm-workflow-tasks-operator-hour">
        	<column label="Name" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
           	<sql>
              select e.firstname || ' ' || e.lastname, w.number from 
                 (select user_id, count(*) as number 
                  from stats.v_workflow_comm 
                  where collection_id = object-id
                  and old_state= 'operacao'
					 and date = to_date('end','DD-MM-YYYY') 
                  group by user_id) as w,
                  eperson e
              where w.user_id = e.email
              order by 1;
           </sql>
        </query>

        <query name="col-adm-workflow-operacao-global">
        	<column label="Operation" align="left" format="" />
        	<column label="Number" align="right" format="###,###,##0" calc-total="yes"/>
        	<column label="N.º of Operators" align="right" format="###,###,##0" calc-total="yes"/>
           <sql>
                select s.name,w.numero, u.operadores from
                  (select old_state, count(*) as numero from stats.v_workflow_comm
                   where collection_id = object-id 
                  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                  group by old_state) as w,
                  (select old_state,count(*) as operadores from 
                      (select old_state,user_id,count(*) from stats.v_workflow_comm
                      where collection_id = object-id 
                      and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                      group by old_state,user_id) as t
                   group by old_state
                  ) as u,
                stats.workflow_steps s
                where w.old_state = s.code
                and w.old_state = u.old_state
                order by w.old_state;
           </sql>
        </query>

	<!-- ************************************************************* -->
	<!-- ************************ ITEM LEVEL ************************* -->
	<!-- ************************************************************* -->

	<!-- ********** ACCESS TYPE ********** -->
		<query name="it-access-downloads-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />				
			<sql>
				select d.year, d.numero
				from 	(select year, (sum(relative_value::real)) as numero
				         from stats.download_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle='object-id'
						 group by year) as d
				order by d.year;
			</sql>
		</query>
		<query name="it-access-downloads-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, (sum(relative_value)) as numero
				         from stats.download_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle='object-id'
						 and year=pyear
						 group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>
		<query name="it-access-downloads-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />		
			<sql>
				select d.date, d.numero
				from 	(select date, (sum(relative_value::real)) as numero
				         from stats.v_download
						 where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="it-access-downloads-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<sql>
				select hora, d.numero
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as numero
				         from stats.v_download
						 where handle='object-id' 
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hora;
			</sql>
		</query>
		<query name="it-access-downloads-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download
					 	 where handle='object-id'
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download
						  where handle='object-id') as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>		
		<query name="it-access-downloads-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads from stats.v_download
						 where handle='object-id'
						 and substr(date::character varying,1,4)='pyear'
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where handle='object-id'
						  and substr(date::character varying,1,4)='pyear') as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>		
		<query name="it-access-downloads-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads from stats.v_download
						 where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where handle='object-id'
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="it-access-downloads-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name , 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads from stats.v_download
						 where handle='object-id'
						 and date = to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where handle='object-id'
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;			
			</sql>
		</query>
		<query name="it-access-views-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />				
			<sql>
				select d.year, d.numero
				from 	(select year, sum(value) as numero
				         from stats.view_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle='object-id'
						 group by year) as d
				order by d.year;
			</sql>
		</query>
		<query name="it-access-views-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select to_date(d.yearmonth::varchar,'yyyymm'), d.numero
				from (select yearmonth, sum(value) as numero
				         from stats.view_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle='object-id'
						 and year=pyear
						 group by yearmonth) as d
				order by d.yearmonth;
			</sql>
		</query>		
		<query name="it-access-views-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />		
			<sql>
				select d.date, d.numero
				from 	(select date, count(*) as numero
				         from stats.v_view
						 where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1
						 group by date) as d
				order by d.date;
			</sql>
		</query>
		<query name="it-access-views-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select hora, d.numero
				from 	(select date_trunc('hour',time)::time as hora, count(*) as numero
				         from stats.v_view
						 where handle='object-id' 
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as d
				order by d.hora;
			</sql>
		</query>
		<query name="it-access-views-series-country-year">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view
					 	 where handle='object-id'
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view
						  where handle='object-id') as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="it-access-views-series-country-month">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views from stats.v_view
						 where handle='object-id'
						 and substr(date::character varying,1,4)='pyear'
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where handle='object-id'
						  and substr(date::character varying,1,4)='pyear') as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="it-access-views-series-country-day">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views from stats.v_view
						 where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where handle='object-id'
						  and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="it-access-views-series-country-hour">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql>
				select  'flag:' || lower(sc.code) || ':' || sc.name , 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views from stats.v_view
						 where handle='object-id'
						 and date = to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where handle='object-id'
						  and date = to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.views desc;			
			</sql>
		</query>
		<query name="it-access-all-series-year">
			<column label="Year" align="left" format="####"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes"/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes"/>
			<sql>
				select t.year, sum(t.downloads) as downloads, sum(t.views) as views 
				from 	(select year, (sum(relative_value)) as downloads, 0 as views
				         from stats.download_item_month, handle
				         where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
						 group by year
						 union all
						 select year, 0 as downloads, sum(value)::bigint as views
				         from stats.view_item_month, handle
				         where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
						 group by year) as t
				group by t.year 
				order by t.year;
			</sql>
		</query>
		<query name="it-access-all-series-month">
			<column label="Month" align="left" format="MMMM" />
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
			select to_date(t.yearmonth::varchar,'yyyymm'), sum(t.downloads) as downloads, sum(t.views) as views
				from (select yearmonth, sum(relative_value) as downloads, 0 as views
				      from stats.download_item_month, handle
				      where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
					  and year=pyear
					  group by yearmonth
					  union all
					  select yearmonth, 0 as downloads, sum(value) as views
				      from stats.view_item_month, handle
				      where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
					  and year=pyear
					  group by yearmonth) as t
				group by t.yearmonth
				order by t.yearmonth;
			</sql>
		</query>
		<query name="it-access-all-series-day">
			<column label="Day" align="left" format="dd, E"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.date as "Dia", sum(t.downloads) as downloads, sum(t.views) as views
				from 	(select date, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download
				         where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date
						 union all
						 select date, 0 as downloads, count(*) as views
				         from stats.v_view
				         where handle='object-id'
						 and date 
						 	between to_date('01-pmonth-pyear','DD-MM-YYYY') 
							and (to_date('01-pmonth-pyear','dd-mm-yyyy') + interval '1 month')::date - 1 
						 group by date) as t
				group by t.date
				order by t.date;
			</sql>
		</query>
		<query name="it-access-all-series-hour">
			<column label="Hour" align="left" format="HH:mm"/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<sql>
				select t.hora, sum(t.downloads) as downloads, sum(views) as views
				from 	(select date_trunc('hour',time)::time as hora, (sum(relative_value::real)) as downloads, 0 as views
				         from stats.v_download
				         where handle='object-id'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time
						 union all
						 select date_trunc('hour',time)::time as hora, 0 as downloads, count(*) as views
				         from stats.v_view
				         where handle='object-id'
						 and date = to_date('end','DD-MM-YYYY') 
						 group by date_trunc('hour',time)::time) as t
				group by t.hora
				order by t.hora;
			</sql>
		</query>		
		<query name="it-access-downloads-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0.0" />
			<sql>	
				select 	d.downloads
				from 	(select sum(relative_value::real)  as downloads
						 from stats.download_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle='object-id'
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d; 
			</sql>
		</query>
		<query name="it-access-downloads-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0.0" />
			<sql>	
				select 	d.downloads
				from 	(select (sum(relative_value::real))  as downloads
						 from stats.v_download
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d;
			</sql>
		</query>				
		<query name="it-access-downloads-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,sum(relative_value::real) as downloads 
						 from stats.v_download
						 where handle='object-id'
						 and date 
						 	between to_date('01-mesinicio-anoinicio','DD-MM-YYYY') 
							and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total from stats.v_download
						  where handle='object-id'
						  and date 
						 	between to_date('01-mesinicio-anoinicio','DD-MM-YYYY') 
							and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="it-access-downloads-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Downloads" align="right" format="###,###,##0.0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.downloads, (d.downloads/t.total)*100 
				from	(select country_code,(sum(relative_value::real)) as downloads 
						 from stats.v_download
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select sum(relative_value::real) as total 
						  from stats.v_download
						  where handle='object-id'
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.downloads desc;
			</sql>
		</query>
		<query name="it-access-views-summary-totals-yearmonth">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.views
				from 	(select sum(value) as views
						 from stats.view_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d; 
			</sql>
		</query>
		<query name="it-access-views-summary-totals-date">
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.views
				from 	(select count(*) as views
						 from stats.v_view
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d;
			</sql>
		</query>				
		<query name="it-access-views-summary-country-yearmonth">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view
						 where handle='object-id'
						 and date 
						 	between to_date('01-mesinicio-anoinicio','DD-MM-YYYY') 
							and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total from stats.v_view
						  where handle='object-id'
						  and date 
						 	between to_date('01-mesinicio-anoinicio','DD-MM-YYYY') 
							and (to_date('01-mesfim-anofim','dd-mm-yyyy') + interval '1 month')::date - 1) as t
                 where d.country_code = sc.code
                 order by d.views desc;
			</sql>
		</query>
		<query name="it-access-views-summary-country-date">
			<column label="Origin" align="left" format=""/>
			<column label="Views" align="right" format="###,###,##0" calc-total="yes" />
			<column label="Perc.(%)" align="right" format="##0.00" calc-total="yes" />
			<sql> 
				select  'flag:' || lower(sc.code) || ':' || sc.name, 
						d.views, (d.views::real/t.total)*100 
				from	(select country_code,count(*) as views 
						 from stats.v_view
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')
                     	 group by country_code) as d,
						 stats.country sc,
						 (select count(*) as total 
						  from stats.v_view
						  where handle='object-id'
						  and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as t
                 where d.country_code = sc.code
                 order by d.views desc;
			</sql>
		</query>
		<query name="it-access-all-summary-totals-yearmonth">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads::bigint, 
						c.views::bigint
				from 	(select (sum(relative_value))  as downloads 
						 from stats.download_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as d,
						(select sum(value) as views from stats.view_item_month, handle
						 where item_id = resource_id and resource_type_id=2 and handle.handle='object-id'
						 and yearmonth between ('anoinicio' || 'mesinicio')::integer and ('anofim' || 'mesfim')::integer) as c;
			</sql>
		</query>
		<query name="it-access-all-summary-totals-date">
			<column label="Downloads" align="right" format="###,###,##0" />
			<column label="Views" align="right" format="###,###,##0" />
			<sql>	
				select 	d.downloads, 
						c.views
				from 	(select (sum(relative_value))::bigint  as downloads 
						 from stats.v_download
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as d,
						(select count(*) as views from stats.v_view
						 where handle='object-id'
						 and date between to_date('start','DD-MM-YYYY') and to_date('end','DD-MM-YYYY')) as c;
			</sql>
		</query>		
	
	<!-- ********** CONTENT TYPE ********** -->
	
        <query name="item-content-simple">
        <column label="Title" align="left" format="" />
        <column label="Entry Date" align="left" format="dd-MM-yyyy" />
           <sql>
           		select t.title, d.date
           		from (select dc.text_value as title
                 	  from item i, handle h, dcvalue dc
                 	  where i.item_id = h.resource_id and h.resource_type_id=2 and h.handle='object-id'
                 	  and dc.item_id= i.item_id
                 	  and dc.dc_type_id=64) as t,
                 	 (select v.data as date
                 	  from item i, handle h, stats.v_item_commit v
                 	  where i.item_id = h.resource_id and h.resource_type_id=2 and h.handle='object-id'
                 	  and v.item_id= i.item_id) as d;
           </sql>
        </query>
	
	<!-- ********** ADM TYPE ********** -->

		<query name="it-workflow">
			<column label="Operation" align="left" format=""/>
			<column label="Date" align="left" format="dd-MM-yyyy"/>
			<column label="Hour" align="left" format="HH:mm:ss"/>
			<column label="Operator" align="left" format=""/>
			<column label="E-mail" align="left" format=""/>
			<sql>
				select ws.name, s.date, s.time, e.firstname || ' ' || e.lastname, e.email
				from handle h, item i, stats.workflow s, stats.workflow_steps ws, eperson e
				where h.handle = 'object-id'
				and h.resource_id = i.item_id
				and i.item_id = s.item_id
				and s.old_state = ws.code
				and s.user_id = e.email
				order by s.old_state;
			</sql>
		</query>
		
 <!-- SUBQUERIES -->
  <sub-query name="communitylist" title="Select the Community">
    <sql>SELECT c.community_id AS value, c.short_description || ' - ' || c.name AS name
    FROM community c
    ORDER BY 2
   </sql>
  </sub-query>

  <sub-query name="collectionlist" title="Select the Collection">
    <sql>SELECT c.collection_id AS value, c.name AS name
    FROM collection c
    ORDER BY 2
   </sql>
  </sub-query>

  <sub-query name="steplist" title="Select the Operation">
    <sql>SELECT code AS value, name AS name
    FROM stats.workflow_steps where taken = true
    ORDER BY 1
   </sql>
  </sub-query>
  <sub-query name="monthlist" title="Select the Month">
    <column label="Code" align="left" format="" />
	<column label="Month" align="left" format="MMMM" />
    <sql>SELECT month AS value, to_date('01' || month || '2000','ddmmyyyy') AS name
    FROM stats.month
    ORDER BY 1
   </sql>
  </sub-query>
  <sub-query name="yearlist" title="Select the Year">
    <sql>SELECT year AS value, year as name
    FROM stats.year
    ORDER BY 1
   </sql>
  </sub-query>
  <sub-query name="spidercountry" title="Select country">
     <sql>
         select '99' as value, '« Todos »' as name
         union all
         (select a.country_code as value, c.name as name
         from (select country_code, count(*) as number from stats.ip_spider group by country_code) as a,
              stats.country c
         where a.country_code = c.code
         order by a.number desc)
     </sql>
  </sub-query>

</querylist>


